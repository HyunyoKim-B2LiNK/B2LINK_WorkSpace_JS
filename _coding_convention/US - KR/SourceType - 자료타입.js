//----------------------------------------------------------------------------------------------------;
arguments - arguments 객체는 함수의 인수를 저장하고 인수에 액세스하는 데 사용됩니다.

Array - Array 클래스를 사용하면 배열에 액세스하고 배열을 조작할 수 있습니다.

Boolean - Boolean 객체는 논리 연산에 사용되는 데이터 유형이며 true 또는 false 값 중 하나를 가질 수 있습니다.

Class - 프로그램의 각 클래스 정의에 대해 Class 객체가 만들어집니다.

Date - Date 클래스는 날짜 및 시간 정보를 나타냅니다.

Error - Error 클래스에는 스크립트에서 발생한 오류에 대한 정보가 들어 있습니다.

EvalError - EvalError 클래스는 사용자 코드에서 Function 객체에 eval() 함수를 호출하거나 new 연산자를 사용할 때 발생하는 오류를 나타냅니다.

Function - 함수는 JavaScript에서 호출할 수 있는 코드의 기본 단위입니다.

int - int 클래스를 사용하면 부호 있는 32비트 정수를 나타내는 데이터 유형을 사용할 수 있습니다.

Math - Math 클래스에는 일반적인 수학 함수 및 값을 나타내는 메서드와 상수가 들어 있습니다.

Number - IEEE-754 배정밀도 부동 소수점 숫자를 나타내는 데이터 유형입니다.

Object - Object 클래스는 JavaScript 런타임 클래스 계층의 최상위에 있습니다.

RangeError - 숫자 값이 허용되는 범위를 벗어나면 RangeError 예외가 발생합니다.

ReferenceError - 봉인된 비동적 객체에서 정의되지 않은 속성을 참조하려고 하면 ReferenceError 예외가 발생합니다.

RegExp - RegExp 클래스를 사용하면 문자열을 검색하고 문자열의 텍스트를 바꾸는 데 사용할 수 있는 패턴인 일반 표현식을 사용할 수 있습니다.

SecurityError - 특정 유형의 보안 문제가 발생하면 SecurityError 예외가 발생합니다.

String - String 클래스는 문자열을 나타내는 데이터 유형입니다.

SyntaxError - 다음 이유 중 하나로 인해 파싱 오류가 발생할 때 SyntaxError 예외가 발생합니다.

TypeError - 피연산자의 실제 유형이 예상 유형과 다르면 TypeError 예외가 발생합니다.

uint - uint 클래스는 부호 없는 32비트 정수를 나타내는 데이터 유형을 사용하는 메서드를 제공합니다.
//----------------------------------------------------------------------------------------------------;